openapi: 3.0.2
info:
  title: 'IOI Market API'
  version: 0.0.1
  description: 'REST api for IOI market platform'
paths:
  /api/activity-logs:
    get:
      tags:
        - ActivityLog
      operationId: getActivityLogCollection
      summary: 'Retrieves the collection of ActivityLog resources.'
      responses:
        200:
          description: 'ActivityLog collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ActivityLog.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityLog'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityLog'
      parameters:
        -
          name: user
          in: query
          required: false
          schema:
            type: string
        -
          name: 'user[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: 'order[createdAt]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
  '/api/activity-logs/{id}':
    get:
      tags:
        - ActivityLog
      operationId: getActivityLogItem
      summary: 'Retrieves a ActivityLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'ActivityLog resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ActivityLog.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityLog'
            text/html:
              schema:
                $ref: '#/components/schemas/ActivityLog'
        404:
          description: 'Resource not found'
  /api/asset-types:
    get:
      tags:
        - AssetType
      operationId: getAssetTypeCollection
      summary: 'Retrieves the collection of AssetType resources.'
      responses:
        200:
          description: 'AssetType collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AssetType.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetType'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetType'
      parameters:
        -
          name: collections
          in: query
          required: false
          schema:
            type: string
        -
          name: 'collections[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[createdAt]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
    post:
      tags:
        - AssetType
      operationId: postAssetTypeCollection
      summary: 'Creates a AssetType resource.'
      responses:
        201:
          description: 'AssetType resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AssetType.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/AssetType'
            text/html:
              schema:
                $ref: '#/components/schemas/AssetType'
          links:
            GetAssetTypeItem:
              parameters:
                id: '$response.body#/id'
              operationId: getAssetTypeItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/asset-types/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AssetType.AssetTypeInput.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/AssetType.AssetTypeInput'
          text/html:
            schema:
              $ref: '#/components/schemas/AssetType.AssetTypeInput'
        description: 'The new AssetType resource'
  /api/asset-types/top-asset-types:
    get:
      tags:
        - AssetType
      operationId: top-asset-typesAssetTypeCollection
      summary: 'Retrieves the collection of AssetType resources.'
      responses:
        200:
          description: 'AssetType collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AssetType.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetType'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetType'
      parameters:
        -
          name: collections
          in: query
          required: false
          schema:
            type: string
        -
          name: 'collections[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[createdAt]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
  '/api/asset-types/{id}':
    get:
      tags:
        - AssetType
      operationId: getAssetTypeItem
      summary: 'Retrieves a AssetType resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'AssetType resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AssetType.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/AssetType'
            text/html:
              schema:
                $ref: '#/components/schemas/AssetType'
        404:
          description: 'Resource not found'
  '/api/asset-types/{id}/rating':
    get:
      tags:
        - AssetType
      operationId: item-operation-rate-asset-typeAssetTypeItem
      summary: 'Retrieves a AssetType resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'AssetType resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AssetType.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/AssetType'
            text/html:
              schema:
                $ref: '#/components/schemas/AssetType'
        404:
          description: 'Resource not found'
  /api/assets:
    get:
      tags:
        - Asset
      operationId: getAssetCollection
      summary: 'Retrieves the collection of Asset resources.'
      responses:
        200:
          description: 'Asset collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Asset.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Asset'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Asset'
      parameters:
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[count]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[createdAt]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
    post:
      tags:
        - Asset
      operationId: postAssetCollection
      summary: 'Creates a Asset resource.'
      responses:
        201:
          description: 'Asset resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Asset.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
            text/html:
              schema:
                $ref: '#/components/schemas/Asset'
          links:
            GetAssetItem:
              parameters:
                id: '$response.body#/id'
              operationId: getAssetItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/assets/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Asset.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Asset'
          text/html:
            schema:
              $ref: '#/components/schemas/Asset'
        description: 'The new Asset resource'
  '/api/assets/{id}':
    get:
      tags:
        - Asset
      operationId: getAssetItem
      summary: 'Retrieves a Asset resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Asset resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Asset.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
            text/html:
              schema:
                $ref: '#/components/schemas/Asset'
        404:
          description: 'Resource not found'
    put:
      tags:
        - Asset
      operationId: putAssetItem
      summary: 'Replaces the Asset resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Asset resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Asset.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
            text/html:
              schema:
                $ref: '#/components/schemas/Asset'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Asset.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Asset'
          text/html:
            schema:
              $ref: '#/components/schemas/Asset'
        description: 'The updated Asset resource'
  '/api/balance-resources/{id}':
    get:
      tags:
        - BalanceResource
      operationId: getBalanceResourceItem
      summary: 'Retrieves a BalanceResource resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'BalanceResource resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/BalanceResource.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceResource'
            text/html:
              schema:
                $ref: '#/components/schemas/BalanceResource'
        404:
          description: 'Resource not found'
  /api/balance-transactions:
    get:
      tags:
        - BalanceTransaction
      operationId: getBalanceTransactionCollection
      summary: 'Retrieves the collection of BalanceTransaction resources.'
      responses:
        200:
          description: 'BalanceTransaction collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/BalanceTransaction.jsonld-attributes.identified_balance-transaction.read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BalanceTransaction-attributes.identified_balance-transaction.read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BalanceTransaction-attributes.identified_balance-transaction.read'
      parameters:
        -
          name: 'order[createdAt]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[createdAt]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
  '/api/balance-transactions/{id}':
    get:
      tags:
        - BalanceTransaction
      operationId: getBalanceTransactionItem
      summary: 'Retrieves a BalanceTransaction resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'BalanceTransaction resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/BalanceTransaction.jsonld-attributes.identified_balance-transaction.read'
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceTransaction-attributes.identified_balance-transaction.read'
            text/html:
              schema:
                $ref: '#/components/schemas/BalanceTransaction-attributes.identified_balance-transaction.read'
        404:
          description: 'Resource not found'
  /api/balance/deposit:
    post:
      tags:
        - BalanceResource
      operationId: deposit-request-operationBalanceResourceCollection
      summary: 'Creates a BalanceResource resource.'
      responses:
        201:
          description: 'BalanceResource resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/BalanceResource.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceResource'
            text/html:
              schema:
                $ref: '#/components/schemas/BalanceResource'
          links:
            GetBalanceResourceItem:
              parameters:
                id: '$response.body#/id'
              operationId: getBalanceResourceItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/balance-resources/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/BalanceResource.BalanceDepositInput.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/BalanceResource.BalanceDepositInput'
          text/html:
            schema:
              $ref: '#/components/schemas/BalanceResource.BalanceDepositInput'
        description: 'The new BalanceResource resource'
  /api/balance/receive-address:
    get:
      tags:
        - BalanceResource
      operationId: address-request-operationBalanceResourceCollection
      summary: 'Retrieves the collection of BalanceResource resources.'
      responses:
        200:
          description: 'BalanceResource collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/BalanceResource.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BalanceResource'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BalanceResource'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
  /api/balance/withdraw:
    post:
      tags:
        - BalanceResource
      operationId: withdraw-request-operationBalanceResourceCollection
      summary: 'Creates a BalanceResource resource.'
      responses:
        201:
          description: 'BalanceResource resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/BalanceResource.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceResource'
            text/html:
              schema:
                $ref: '#/components/schemas/BalanceResource'
          links:
            GetBalanceResourceItem:
              parameters:
                id: '$response.body#/id'
              operationId: getBalanceResourceItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/balance-resources/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/BalanceResource.BalanceWithdrawInput.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/BalanceResource.BalanceWithdrawInput'
          text/html:
            schema:
              $ref: '#/components/schemas/BalanceResource.BalanceWithdrawInput'
        description: 'The new BalanceResource resource'
  /api/balances:
    get:
      tags:
        - Balance
      operationId: getBalanceCollection
      summary: 'Retrieves the collection of Balance resources.'
      responses:
        200:
          description: 'Balance collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Balance.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Balance'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Balance'
      parameters:
        -
          name: user
          in: query
          required: false
          schema:
            type: string
        -
          name: 'user[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
  '/api/balances/{id}':
    get:
      tags:
        - Balance
      operationId: getBalanceItem
      summary: 'Retrieves a Balance resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Balance resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Balance.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Balance'
            text/html:
              schema:
                $ref: '#/components/schemas/Balance'
        404:
          description: 'Resource not found'
  /api/categories:
    get:
      tags:
        - Category
      operationId: getCategoryCollection
      summary: 'Retrieves the collection of Category resources.'
      responses:
        200:
          description: 'Category collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Category.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
      parameters:
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
    post:
      tags:
        - Category
      operationId: postCategoryCollection
      summary: 'Creates a Category resource.'
      responses:
        201:
          description: 'Category resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Category.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
            text/html:
              schema:
                $ref: '#/components/schemas/Category'
          links:
            GetCategoryItem:
              parameters:
                id: '$response.body#/id'
              operationId: getCategoryItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/categories/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Category.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          text/html:
            schema:
              $ref: '#/components/schemas/Category'
        description: 'The new Category resource'
  '/api/categories/{id}':
    get:
      tags:
        - Category
      operationId: getCategoryItem
      summary: 'Retrieves a Category resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Category resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Category.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
            text/html:
              schema:
                $ref: '#/components/schemas/Category'
        404:
          description: 'Resource not found'
    put:
      tags:
        - Category
      operationId: putCategoryItem
      summary: 'Replaces the Category resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Category resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Category.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
            text/html:
              schema:
                $ref: '#/components/schemas/Category'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Category.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          text/html:
            schema:
              $ref: '#/components/schemas/Category'
        description: 'The updated Category resource'
    delete:
      tags:
        - Category
      operationId: deleteCategoryItem
      summary: 'Removes the Category resource.'
      responses:
        204:
          description: 'Category resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
  /api/charities:
    get:
      tags:
        - Charity
      operationId: getCharityCollection
      summary: 'Retrieves the collection of Charity resources.'
      responses:
        200:
          description: 'Charity collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Charity.jsonld-attributes.identified_charity.read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Charity-attributes.identified_charity.read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Charity-attributes.identified_charity.read'
      parameters:
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[amount]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[createdAt]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[createdAt]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
    post:
      tags:
        - Charity
      operationId: postCharityCollection
      summary: 'Creates a Charity resource.'
      responses:
        201:
          description: 'Charity resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Charity.jsonld-attributes.identified_charity.read'
            application/json:
              schema:
                $ref: '#/components/schemas/Charity-attributes.identified_charity.read'
            text/html:
              schema:
                $ref: '#/components/schemas/Charity-attributes.identified_charity.read'
          links:
            GetCharityItem:
              parameters:
                id: '$response.body#/id'
              operationId: getCharityItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/charities/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Charity.CharityInput.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Charity.CharityInput'
          text/html:
            schema:
              $ref: '#/components/schemas/Charity.CharityInput'
        description: 'The new Charity resource'
  '/api/charities/{id}':
    get:
      tags:
        - Charity
      operationId: getCharityItem
      summary: 'Retrieves a Charity resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Charity resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Charity.jsonld-attributes.identified_charity.read'
            application/json:
              schema:
                $ref: '#/components/schemas/Charity-attributes.identified_charity.read'
            text/html:
              schema:
                $ref: '#/components/schemas/Charity-attributes.identified_charity.read'
        404:
          description: 'Resource not found'
    put:
      tags:
        - Charity
      operationId: putCharityItem
      summary: 'Replaces the Charity resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Charity resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Charity.jsonld-attributes.identified_charity.read'
            application/json:
              schema:
                $ref: '#/components/schemas/Charity-attributes.identified_charity.read'
            text/html:
              schema:
                $ref: '#/components/schemas/Charity-attributes.identified_charity.read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Charity.CharityInput.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Charity.CharityInput'
          text/html:
            schema:
              $ref: '#/components/schemas/Charity.CharityInput'
        description: 'The updated Charity resource'
    delete:
      tags:
        - Charity
      operationId: deleteCharityItem
      summary: 'Removes the Charity resource.'
      responses:
        204:
          description: 'Charity resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
  '/api/charities/{id}/wallets':
    get:
      tags:
        - CharityWallet
        - Charity
      operationId: api_charities_wallets_get_subresource
      summary: 'Retrieves the collection of CharityWallet resources.'
      responses:
        200:
          description: 'CharityWallet collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/CharityWallet.jsonld-attributes.identified_charityWallet.read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CharityWallet-attributes.identified_charityWallet.read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CharityWallet-attributes.identified_charityWallet.read'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: 'order[createdAt]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[createdAt]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
  '/api/charity-wallet-transactions/{id}':
    get:
      tags:
        - CharityWalletTransaction
      operationId: getCharityWalletTransactionItem
      summary: 'Retrieves a CharityWalletTransaction resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'CharityWalletTransaction resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CharityWalletTransaction.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/CharityWalletTransaction'
            text/html:
              schema:
                $ref: '#/components/schemas/CharityWalletTransaction'
        404:
          description: 'Resource not found'
  /api/charity-wallets:
    post:
      tags:
        - CharityWallet
      operationId: postCharityWalletCollection
      summary: 'Creates a CharityWallet resource.'
      responses:
        201:
          description: 'CharityWallet resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CharityWallet.jsonld-attributes.identified_charityWallet.read'
            application/json:
              schema:
                $ref: '#/components/schemas/CharityWallet-attributes.identified_charityWallet.read'
            text/html:
              schema:
                $ref: '#/components/schemas/CharityWallet-attributes.identified_charityWallet.read'
          links:
            GetCharityWalletItem:
              parameters:
                id: '$response.body#/id'
              operationId: getCharityWalletItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/charity-wallets/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CharityWallet.CharityWalletInput.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/CharityWallet.CharityWalletInput'
          text/html:
            schema:
              $ref: '#/components/schemas/CharityWallet.CharityWalletInput'
        description: 'The new CharityWallet resource'
  '/api/charity-wallets/{id}':
    delete:
      tags:
        - CharityWallet
      operationId: deleteCharityWalletItem
      summary: 'Removes the CharityWallet resource.'
      responses:
        204:
          description: 'CharityWallet resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    get:
      tags:
        - CharityWallet
      operationId: getCharityWalletItem
      summary: 'Retrieves a CharityWallet resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'CharityWallet resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CharityWallet.jsonld-attributes.identified_charityWallet.read'
            application/json:
              schema:
                $ref: '#/components/schemas/CharityWallet-attributes.identified_charityWallet.read'
            text/html:
              schema:
                $ref: '#/components/schemas/CharityWallet-attributes.identified_charityWallet.read'
        404:
          description: 'Resource not found'
    put:
      tags:
        - CharityWallet
      operationId: putCharityWalletItem
      summary: 'Replaces the CharityWallet resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'CharityWallet resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CharityWallet.jsonld-attributes.identified_charityWallet.read'
            application/json:
              schema:
                $ref: '#/components/schemas/CharityWallet-attributes.identified_charityWallet.read'
            text/html:
              schema:
                $ref: '#/components/schemas/CharityWallet-attributes.identified_charityWallet.read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CharityWallet.CharityWalletInput.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/CharityWallet.CharityWalletInput'
          text/html:
            schema:
              $ref: '#/components/schemas/CharityWallet.CharityWalletInput'
        description: 'The updated CharityWallet resource'
  '/api/charity-wallets/{id}/payout':
    post:
      tags:
        - CharityWallet
      operationId: item_operation_payoutCharityWalletItem
      summary: 'Creates a CharityWallet resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'CharityWallet resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CharityWallet.jsonld-attributes.identified_charityWallet.read'
            application/json:
              schema:
                $ref: '#/components/schemas/CharityWallet-attributes.identified_charityWallet.read'
            text/html:
              schema:
                $ref: '#/components/schemas/CharityWallet-attributes.identified_charityWallet.read'
          links:
            GetCharityWalletItem:
              parameters:
                id: '$response.body#/id'
              operationId: getCharityWalletItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/charity-wallets/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CharityWallet.PayoutInput.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/CharityWallet.PayoutInput'
          text/html:
            schema:
              $ref: '#/components/schemas/CharityWallet.PayoutInput'
        description: 'The new CharityWallet resource'
  '/api/charity-wallets/{id}/transactions':
    get:
      tags:
        - CharityWalletTransaction
        - CharityWallet
      operationId: api_charity_wallets_transactions_get_subresource
      summary: 'Retrieves the collection of CharityWalletTransaction resources.'
      responses:
        200:
          description: 'CharityWalletTransaction collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/CharityWalletTransaction.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CharityWalletTransaction'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CharityWalletTransaction'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: 'order[createdAt]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[createdAt]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
  /api/chat-messages:
    post:
      tags:
        - ChatMessage
      operationId: postMessageCollection
      summary: 'Creates a Message resource.'
      responses:
        201:
          description: 'Message resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Message.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
            text/html:
              schema:
                $ref: '#/components/schemas/Message'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Message.ChatMessageInput.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Message.ChatMessageInput'
          text/html:
            schema:
              $ref: '#/components/schemas/Message.ChatMessageInput'
        description: 'The new Message resource'
  '/api/chat-messages/{id}':
    get:
      tags:
        - ChatMessage
      operationId: getMessageItem
      summary: 'Retrieves a Message resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Message resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Message.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
            text/html:
              schema:
                $ref: '#/components/schemas/Message'
        404:
          description: 'Resource not found'
  /api/collections:
    get:
      tags:
        - Collection
      operationId: getCollectionCollection
      summary: 'Retrieves the collection of Collection resources.'
      responses:
        200:
          description: 'Collection collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Collection.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Collection'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Collection'
      parameters:
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
    post:
      tags:
        - Collection
      operationId: postCollectionCollection
      summary: 'Creates a Collection resource.'
      responses:
        201:
          description: 'Collection resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Collection.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
            text/html:
              schema:
                $ref: '#/components/schemas/Collection'
          links:
            GetCollectionItem:
              parameters:
                id: '$response.body#/id'
              operationId: getCollectionItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/collections/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Collection.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Collection'
          text/html:
            schema:
              $ref: '#/components/schemas/Collection'
        description: 'The new Collection resource'
  '/api/collections/{id}':
    get:
      tags:
        - Collection
      operationId: getCollectionItem
      summary: 'Retrieves a Collection resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Collection resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Collection.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
            text/html:
              schema:
                $ref: '#/components/schemas/Collection'
        404:
          description: 'Resource not found'
    put:
      tags:
        - Collection
      operationId: putCollectionItem
      summary: 'Replaces the Collection resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Collection resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Collection.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
            text/html:
              schema:
                $ref: '#/components/schemas/Collection'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Collection.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Collection'
          text/html:
            schema:
              $ref: '#/components/schemas/Collection'
        description: 'The updated Collection resource'
    delete:
      tags:
        - Collection
      operationId: deleteCollectionItem
      summary: 'Removes the Collection resource.'
      responses:
        204:
          description: 'Collection resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
  /api/devices:
    post:
      tags:
        - Device
      operationId: postDeviceCollection
      summary: 'Creates a Device resource.'
      responses:
        201:
          description: 'Device resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Device.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
            text/html:
              schema:
                $ref: '#/components/schemas/Device'
          links:
            GetDeviceItem:
              parameters:
                id: '$response.body#/id'
              operationId: getDeviceItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/devices/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Device.DeviceInput.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Device.DeviceInput'
          text/html:
            schema:
              $ref: '#/components/schemas/Device.DeviceInput'
        description: 'The new Device resource'
  '/api/devices/{id}':
    get:
      tags:
        - Device
      operationId: getDeviceItem
      summary: 'Retrieves a Device resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Device resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Device.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
            text/html:
              schema:
                $ref: '#/components/schemas/Device'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - Device
      operationId: deleteDeviceItem
      summary: 'Removes the Device resource.'
      responses:
        204:
          description: 'Device resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
  /api/me/feed:
    get:
      tags:
        - UserFeedLog
      operationId: getUserFeedLogCollection
      summary: 'Retrieves the collection of UserFeedLog resources.'
      responses:
        200:
          description: 'UserFeedLog collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/UserFeedLog.jsonld-attributes.identified_UserFeedLog.read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserFeedLog-attributes.identified_UserFeedLog.read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserFeedLog-attributes.identified_UserFeedLog.read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
  '/api/me/feed/{id}':
    get:
      tags:
        - UserFeedLog
      operationId: getUserFeedLogItem
      summary: 'Retrieves a UserFeedLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'UserFeedLog resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/UserFeedLog.jsonld-attributes.identified_UserFeedLog.read'
            application/json:
              schema:
                $ref: '#/components/schemas/UserFeedLog-attributes.identified_UserFeedLog.read'
            text/html:
              schema:
                $ref: '#/components/schemas/UserFeedLog-attributes.identified_UserFeedLog.read'
        404:
          description: 'Resource not found'
  /api/multitable-search:
    get:
      tags:
        - MultitableSearch
      operationId: getMultitableSearchCollection
      summary: 'Retrieves the collection of MultitableSearch resources.'
      responses:
        200:
          description: 'MultitableSearch collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/MultitableSearch.jsonld-multitable_search_read_user.collection.get_userProfile.read_offer.collection.get_asset-type.collection.get_asset.collection.get_attributes.all' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MultitableSearch-multitable_search_read_user.collection.get_userProfile.read_offer.collection.get_asset-type.collection.get_asset.collection.get_attributes.all'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MultitableSearch-multitable_search_read_user.collection.get_userProfile.read_offer.collection.get_asset-type.collection.get_asset.collection.get_attributes.all'
      parameters:
        -
          name: 'Fulltext offer search'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
  '/api/multitable-searches/{id}':
    get:
      summary: 'Dummy endpoint'
      tags:
        - MultitableSearch
      operationId: getMultitableSearchItem
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'MultitableSearch resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/MultitableSearch.jsonld-multitable_search_read_user.collection.get_userProfile.read_offer.collection.get_asset-type.collection.get_asset.collection.get_attributes.all'
            application/json:
              schema:
                $ref: '#/components/schemas/MultitableSearch-multitable_search_read_user.collection.get_userProfile.read_offer.collection.get_asset-type.collection.get_asset.collection.get_attributes.all'
            text/html:
              schema:
                $ref: '#/components/schemas/MultitableSearch-multitable_search_read_user.collection.get_userProfile.read_offer.collection.get_asset-type.collection.get_asset.collection.get_attributes.all'
        404:
          description: 'Resource not found'
  /api/notifications:
    get:
      tags:
        - DatabaseNotification
      operationId: getDatabaseNotificationCollection
      summary: 'Retrieves the collection of DatabaseNotification resources.'
      responses:
        200:
          description: 'DatabaseNotification collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/DatabaseNotification.jsonld-attributes.identified_databaseNotification.read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DatabaseNotification-attributes.identified_databaseNotification.read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DatabaseNotification-attributes.identified_databaseNotification.read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
  /api/notifications/clear-all:
    delete:
      responses:
        200:
          description: 'DatabaseNotification resources deleted'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultBool'
      tags:
        - DatabaseNotification
      operationId: collection-operation-delete-allDatabaseNotificationCollection
      summary: 'Removes the DatabaseNotification resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
  /api/notifications/mark-all-as-read:
    get:
      tags:
        - DatabaseNotification
      operationId: collection-operation-mark-all-as-readDatabaseNotificationCollection
      summary: 'Retrieves the collection of DatabaseNotification resources.'
      responses:
        204:
          description: 'DatabaseNotification collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/DatabaseNotification.jsonld-attributes.identified_databaseNotification.read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DatabaseNotification-attributes.identified_databaseNotification.read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DatabaseNotification-attributes.identified_databaseNotification.read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
  '/api/notifications/{id}':
    get:
      tags:
        - DatabaseNotification
      operationId: getDatabaseNotificationItem
      summary: 'Retrieves a DatabaseNotification resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DatabaseNotification resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DatabaseNotification.jsonld-attributes.identified_databaseNotification.read'
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseNotification-attributes.identified_databaseNotification.read'
            text/html:
              schema:
                $ref: '#/components/schemas/DatabaseNotification-attributes.identified_databaseNotification.read'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - DatabaseNotification
      operationId: deleteDatabaseNotificationItem
      summary: 'Removes the DatabaseNotification resource.'
      responses:
        204:
          description: 'DatabaseNotification resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
  '/api/notifications/{id}/mark-as-read':
    get:
      tags:
        - DatabaseNotification
      operationId: item-operation-mark-as-readDatabaseNotificationItem
      summary: 'Retrieves a DatabaseNotification resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DatabaseNotification resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DatabaseNotification.jsonld-attributes.identified_databaseNotification.read'
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseNotification-attributes.identified_databaseNotification.read'
            text/html:
              schema:
                $ref: '#/components/schemas/DatabaseNotification-attributes.identified_databaseNotification.read'
        404:
          description: 'Resource not found'
  /api/offers:
    get:
      summary: 'Get collection of offers'
      description: 'Filtering by price looks like /api/offers?price[gt]=10&price[lt]=19.99'
      tags:
        - Offer
      operationId: getOfferCollection
      responses:
        200:
          description: 'Offer collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Offer.jsonld-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Offer-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Offer-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all'
      parameters:
        -
          name: asset.owner
          in: query
          required: false
          schema:
            type: string
        -
          name: 'asset.owner[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: asset.name
          in: query
          required: false
          schema:
            type: string
        -
          name: asset.description
          in: query
          required: false
          schema:
            type: string
        -
          name: asset.assetType.name
          in: query
          required: false
          schema:
            type: string
        -
          name: asset.assetType.description
          in: query
          required: false
          schema:
            type: string
        -
          name: asset.assetType.owner
          in: query
          required: false
          schema:
            type: string
        -
          name: 'asset.assetType.owner[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: asset.assetType.collections
          in: query
          required: false
          schema:
            type: string
        -
          name: 'asset.assetType.collections[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: asset.assetType.categories
          in: query
          required: false
          schema:
            type: string
        -
          name: 'asset.assetType.categories[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: asset.assetType.tags
          in: query
          required: false
          schema:
            type: string
        -
          name: 'asset.assetType.tags[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: offerType
          in: query
          required: false
          schema:
            type: string
        -
          name: 'offerType[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: 'Fulltext offer search'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'Limit results to given number'
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'price[between]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'price[gt]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'price[gte]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'price[lt]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'price[lte]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'remaining[between]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'remaining[gt]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'remaining[gte]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'remaining[lt]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'remaining[lte]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[price]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[remaining]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[createdAt]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: isTop
          in: query
          required: false
          schema:
            type: boolean
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
    post:
      tags:
        - Offer
      operationId: postOfferCollection
      summary: 'Creates a Offer resource.'
      responses:
        201:
          description: 'Offer resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Offer.jsonld-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all'
            application/json:
              schema:
                $ref: '#/components/schemas/Offer-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all'
            text/html:
              schema:
                $ref: '#/components/schemas/Offer-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all'
          links:
            GetOfferItem:
              parameters:
                id: '$response.body#/id'
              operationId: getOfferItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/offers/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Offer.OfferInput.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Offer.OfferInput'
          text/html:
            schema:
              $ref: '#/components/schemas/Offer.OfferInput'
        description: 'The new Offer resource'
  '/api/offers/{id}':
    get:
      tags:
        - Offer
      operationId: getOfferItem
      summary: 'Retrieves a Offer resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Offer resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Offer.jsonld-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all'
            application/json:
              schema:
                $ref: '#/components/schemas/Offer-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all'
            text/html:
              schema:
                $ref: '#/components/schemas/Offer-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - Offer
      operationId: deleteOfferItem
      summary: 'Removes the Offer resource.'
      responses:
        204:
          description: 'Offer resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
  '/api/offers/{id}/buy-asset':
    post:
      tags:
        - Offer
      operationId: item_operation_buy_assetOfferItem
      summary: 'Creates a Offer resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        201:
          description: 'Offer resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Offer.jsonld-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all'
            application/json:
              schema:
                $ref: '#/components/schemas/Offer-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all'
            text/html:
              schema:
                $ref: '#/components/schemas/Offer-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all'
          links:
            GetOfferItem:
              parameters:
                id: '$response.body#/id'
              operationId: getOfferItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/offers/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Offer.BuyAssetInput.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Offer.BuyAssetInput'
          text/html:
            schema:
              $ref: '#/components/schemas/Offer.BuyAssetInput'
        description: 'The new Offer resource'
  /api/private/users/balance-deposit:
    post:
      tags:
        - User
      operationId: item-operation-balance-depositUserCollection
      summary: 'Creates a User resource.'
      responses:
        201:
          description: 'User resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/html:
              schema:
                $ref: '#/components/schemas/User'
          links:
            GetUserItem:
              parameters:
                id: '$response.body#/id'
              operationId: getUserItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/users/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User.DepositResponse.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/User.DepositResponse'
          text/html:
            schema:
              $ref: '#/components/schemas/User.DepositResponse'
        description: 'The new User resource'
  /api/rating/asset-type/asset-type-ratings:
    get:
      tags:
        - AssetTypeRating
      operationId: getAssetTypeRatingCollection
      summary: 'Retrieves the collection of AssetTypeRating resources.'
      responses:
        200:
          description: 'AssetTypeRating collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AssetTypeRating.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetTypeRating'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetTypeRating'
      parameters:
        -
          name: 'order[rate]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[createdAt]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
    post:
      tags:
        - AssetTypeRating
      operationId: postAssetTypeRatingCollection
      summary: 'Creates a AssetTypeRating resource.'
      responses:
        201:
          description: 'AssetTypeRating resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AssetTypeRating.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/AssetTypeRating'
            text/html:
              schema:
                $ref: '#/components/schemas/AssetTypeRating'
          links:
            GetAssetTypeRatingItem:
              parameters:
                id: '$response.body#/id'
              operationId: getAssetTypeRatingItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/rating/asset-type/asset-type-ratings/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AssetTypeRating.AssetTypeRatingInput.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/AssetTypeRating.AssetTypeRatingInput'
          text/html:
            schema:
              $ref: '#/components/schemas/AssetTypeRating.AssetTypeRatingInput'
        description: 'The new AssetTypeRating resource'
  '/api/rating/asset-type/asset-type-ratings/{id}':
    get:
      tags:
        - AssetTypeRating
      operationId: getAssetTypeRatingItem
      summary: 'Retrieves a AssetTypeRating resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'AssetTypeRating resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AssetTypeRating.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/AssetTypeRating'
            text/html:
              schema:
                $ref: '#/components/schemas/AssetTypeRating'
        404:
          description: 'Resource not found'
  /api/rating/user/:
    get:
      tags:
        - UserRating
      operationId: getUserRatingCollection
      summary: 'Retrieves the collection of UserRating resources.'
      responses:
        200:
          description: 'UserRating collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/UserRating.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserRating'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserRating'
      parameters:
        -
          name: ratedUser
          in: query
          required: false
          schema:
            type: string
        -
          name: 'ratedUser[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: 'order[rate]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[createdAt]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
    post:
      tags:
        - UserRating
      operationId: postUserRatingCollection
      summary: 'Creates a UserRating resource.'
      responses:
        201:
          description: 'UserRating resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/UserRating.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/UserRating'
            text/html:
              schema:
                $ref: '#/components/schemas/UserRating'
          links:
            GetUserRatingItem:
              parameters:
                id: '$response.body#/id'
              operationId: getUserRatingItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/rating/user/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/UserRating.UserRatingInput.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/UserRating.UserRatingInput'
          text/html:
            schema:
              $ref: '#/components/schemas/UserRating.UserRatingInput'
        description: 'The new UserRating resource'
  '/api/rating/user/{id}':
    get:
      tags:
        - UserRating
      operationId: getUserRatingItem
      summary: 'Retrieves a UserRating resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'UserRating resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/UserRating.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/UserRating'
            text/html:
              schema:
                $ref: '#/components/schemas/UserRating'
        404:
          description: 'Resource not found'
  /api/tags:
    get:
      tags:
        - Tag
      operationId: getTagCollection
      summary: 'Retrieves the collection of Tag resources.'
      responses:
        200:
          description: 'Tag collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Tag.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
      parameters:
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
    post:
      tags:
        - Tag
      operationId: postTagCollection
      summary: 'Creates a Tag resource.'
      responses:
        201:
          description: 'Tag resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Tag.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
            text/html:
              schema:
                $ref: '#/components/schemas/Tag'
          links:
            GetTagItem:
              parameters:
                id: '$response.body#/id'
              operationId: getTagItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/tags/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Tag.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
          text/html:
            schema:
              $ref: '#/components/schemas/Tag'
        description: 'The new Tag resource'
  '/api/tags/{id}':
    get:
      tags:
        - Tag
      operationId: getTagItem
      summary: 'Retrieves a Tag resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Tag resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Tag.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
            text/html:
              schema:
                $ref: '#/components/schemas/Tag'
        404:
          description: 'Resource not found'
    put:
      tags:
        - Tag
      operationId: putTagItem
      summary: 'Replaces the Tag resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Tag resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Tag.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
            text/html:
              schema:
                $ref: '#/components/schemas/Tag'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Tag.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
          text/html:
            schema:
              $ref: '#/components/schemas/Tag'
        description: 'The updated Tag resource'
    delete:
      tags:
        - Tag
      operationId: deleteTagItem
      summary: 'Removes the Tag resource.'
      responses:
        204:
          description: 'Tag resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
  '/api/transactions/{id}':
    get:
      tags:
        - Transaction
      operationId: getTransactionItem
      summary: 'Retrieves a Transaction resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Transaction resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Transaction.jsonld-attributes.identified_transaction.read'
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction-attributes.identified_transaction.read'
            text/html:
              schema:
                $ref: '#/components/schemas/Transaction-attributes.identified_transaction.read'
        404:
          description: 'Resource not found'
  /api/user-profiles:
    get:
      tags:
        - UserProfile
      operationId: getUserProfileCollection
      summary: 'Retrieves the collection of UserProfile resources.'
      responses:
        200:
          description: 'UserProfile collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/UserProfile.jsonld-attributes.identified_userProfile.read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfile-attributes.identified_userProfile.read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfile-attributes.identified_userProfile.read'
      parameters:
        -
          name: 'order[nick]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[createdAt]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[createdAt]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
  '/api/user-profiles/{id}':
    get:
      tags:
        - UserProfile
      operationId: getUserProfileItem
      summary: 'Retrieves a UserProfile resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'UserProfile resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/UserProfile.jsonld-attributes.identified_userProfile.read'
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile-attributes.identified_userProfile.read'
            text/html:
              schema:
                $ref: '#/components/schemas/UserProfile-attributes.identified_userProfile.read'
        404:
          description: 'Resource not found'
    put:
      tags:
        - UserProfile
      operationId: putUserProfileItem
      summary: 'Replaces the UserProfile resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'UserProfile resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/UserProfile.jsonld-attributes.identified_userProfile.read'
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile-attributes.identified_userProfile.read'
            text/html:
              schema:
                $ref: '#/components/schemas/UserProfile-attributes.identified_userProfile.read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/UserProfile.jsonld-userProfile.write'
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile-userProfile.write'
          text/html:
            schema:
              $ref: '#/components/schemas/UserProfile-userProfile.write'
        description: 'The updated UserProfile resource'
  '/api/user-profiles/{id}/follow':
    post:
      tags:
        - UserProfile
      operationId: item-operation-followUserProfileItem
      summary: 'Creates a UserProfile resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        204:
          description: 'UserProfile resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/UserProfile.jsonld-attributes.identified_userProfile.read'
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile-attributes.identified_userProfile.read'
            text/html:
              schema:
                $ref: '#/components/schemas/UserProfile-attributes.identified_userProfile.read'
          links:
            GetUserProfileItem:
              parameters:
                id: '$response.body#/id'
              operationId: getUserProfileItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/user-profiles/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
  '/api/user-profiles/{id}/unfollow':
    post:
      tags:
        - UserProfile
      operationId: item-operation-unfollowUserProfileItem
      summary: 'Creates a UserProfile resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        204:
          description: 'UserProfile resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/UserProfile.jsonld-attributes.identified_userProfile.read'
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile-attributes.identified_userProfile.read'
            text/html:
              schema:
                $ref: '#/components/schemas/UserProfile-attributes.identified_userProfile.read'
          links:
            GetUserProfileItem:
              parameters:
                id: '$response.body#/id'
              operationId: getUserProfileItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/user-profiles/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
  /api/users:
    get:
      tags:
        - User
      operationId: getUserCollection
      summary: 'Retrieves the collection of User resources.'
      responses:
        200:
          description: 'User collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/User.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
      parameters:
        -
          name: 'Fulltext owner search'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[nick]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[verifiedAt]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[createdAt]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[createdAt]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
    post:
      tags:
        - User
      operationId: postUserCollection
      summary: 'Creates a User resource.'
      responses:
        201:
          description: 'User resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/html:
              schema:
                $ref: '#/components/schemas/User'
          links:
            GetUserItem:
              parameters:
                id: '$response.body#/id'
              operationId: getUserItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/users/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          text/html:
            schema:
              $ref: '#/components/schemas/User'
        description: 'The new User resource'
  '/api/users/{id}':
    get:
      tags:
        - User
      operationId: getUserItem
      summary: 'Retrieves a User resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'User resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/html:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - User
      operationId: deleteUserItem
      summary: 'Removes the User resource.'
      responses:
        204:
          description: 'User resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
  '/api/users/{id}/devices':
    get:
      tags:
        - Device
        - User
      operationId: api_users_devices_get_subresource
      summary: 'Retrieves the collection of Device resources.'
      responses:
        200:
          description: 'Device collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Device.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: 'order[createdAt]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[createdAt]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
  '/api/users/{id}/rating':
    get:
      tags:
        - User
      operationId: item-operation-rate-userUserItem
      summary: 'Retrieves a User resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'User resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/html:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: 'Resource not found'
  '/api/users/{id}/transactions':
    get:
      tags:
        - Transaction
        - User
      operationId: api_users_transactions_get_subresource
      summary: 'Retrieves the collection of Transaction resources.'
      responses:
        200:
          description: 'Transaction collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Transaction.jsonld-attributes.identified_transaction.read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction-attributes.identified_transaction.read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction-attributes.identified_transaction.read'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: 'order[createdAt]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[createdAt]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
security:
  -
    api_key: []
components:
  schemas:
    ActivityLog:
      type: object
      description: ''
      properties:
        user:
          type: string
          format: iri-reference
          nullable: true
        messageType:
          type: string
          enum:
            - sold_asset
            - bought_asset
            - created_asset
            - created_asset_type
            - created_offer
          example: sold_asset
        context:
          type: array
          items:
            type: string
          nullable: true
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
        manualCreatedAt:
          writeOnly: true
          type: string
          format: date-time
          nullable: true
    ActivityLog.jsonld:
      type: object
      description: ''
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        user:
          type: string
          format: iri-reference
          nullable: true
        messageType:
          type: string
          enum:
            - sold_asset
            - bought_asset
            - created_asset
            - created_asset_type
            - created_offer
          example: sold_asset
        context:
          type: array
          items:
            type: string
          nullable: true
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
        manualCreatedAt:
          writeOnly: true
          type: string
          format: date-time
          nullable: true
    Asset:
      type: object
      description: ''
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        count:
          type: integer
        lockedAmount:
          type: integer
        extras:
          type: string
        owner:
          type: string
          format: iri-reference
          nullable: true
        assetType:
          type: string
          format: iri-reference
          nullable: true
        offers:
          type: array
          items:
            type: string
            format: iri-reference
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
        imageUrl:
          readOnly: true
          type: string
          nullable: true
        manualCreatedAt:
          writeOnly: true
          type: string
          format: date-time
          nullable: true
    Asset-multitable_search_read_user.collection.get_userProfile.read_offer.collection.get_asset-type.collection.get_asset.collection.get_attributes.all:
      type: object
      description: ''
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        assetType:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AssetType-multitable_search_read_user.collection.get_userProfile.read_offer.collection.get_asset-type.collection.get_asset.collection.get_attributes.all'
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
    Asset-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all:
      type: object
      description: ''
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        assetType:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AssetType-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all'
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
    Asset.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        count:
          type: integer
        lockedAmount:
          type: integer
        extras:
          type: string
        owner:
          type: string
          format: iri-reference
          nullable: true
        assetType:
          type: string
          format: iri-reference
          nullable: true
        offers:
          type: array
          items:
            type: string
            format: iri-reference
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
        imageUrl:
          readOnly: true
          type: string
          nullable: true
        manualCreatedAt:
          writeOnly: true
          type: string
          format: date-time
          nullable: true
    Asset.jsonld-multitable_search_read_user.collection.get_userProfile.read_offer.collection.get_asset-type.collection.get_asset.collection.get_attributes.all:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        assetType:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AssetType.jsonld-multitable_search_read_user.collection.get_userProfile.read_offer.collection.get_asset-type.collection.get_asset.collection.get_attributes.all'
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
    Asset.jsonld-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        assetType:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AssetType.jsonld-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all'
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
    AssetType:
      type: object
      description: ''
      properties:
        contractId:
          type: string
        tokenId:
          type: string
        name:
          type: string
        description:
          type: string
          nullable: true
        extras:
          type: string
          nullable: true
        metadata:
          type: array
          items:
            type: string
          nullable: true
        author:
          type: string
          format: iri-reference
          nullable: true
        isTop:
          type: boolean
        imageUrl:
          type: string
          nullable: true
        collections:
          type: array
          items:
            type: string
            format: iri-reference
        categories:
          type: array
          items:
            type: string
            format: iri-reference
        tags:
          type: array
          items:
            type: string
            format: iri-reference
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
        manualCreatedAt:
          writeOnly: true
          type: string
          format: date-time
          nullable: true
    AssetType-multitable_search_read_user.collection.get_userProfile.read_offer.collection.get_asset-type.collection.get_asset.collection.get_attributes.all:
      type: object
      description: ''
      properties:
        name:
          type: string
        author:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/User-multitable_search_read_user.collection.get_userProfile.read_offer.collection.get_asset-type.collection.get_asset.collection.get_attributes.all'
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
    AssetType-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all:
      type: object
      description: ''
      properties:
        name:
          type: string
        author:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/User-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all'
        collections:
          type: array
          items:
            $ref: '#/components/schemas/Collection-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all'
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
    AssetType.AssetTypeInput:
      type: object
      description: ''
      properties:
        author:
          example: /api/users/
          type: string
          format: iri-reference
        blockchainSymbol:
          default: matic
          example: matic
          type: string
        address:
          type: string
        tokenId:
          type: integer
    AssetType.AssetTypeInput.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        author:
          example: /api/users/
          type: string
          format: iri-reference
        blockchainSymbol:
          default: matic
          example: matic
          type: string
        address:
          type: string
        tokenId:
          type: integer
    AssetType.jsonld:
      type: object
      description: ''
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        contractId:
          type: string
        tokenId:
          type: string
        name:
          type: string
        description:
          type: string
          nullable: true
        extras:
          type: string
          nullable: true
        metadata:
          type: array
          items:
            type: string
          nullable: true
        author:
          type: string
          format: iri-reference
          nullable: true
        isTop:
          type: boolean
        imageUrl:
          type: string
          nullable: true
        collections:
          type: array
          items:
            type: string
            format: iri-reference
        categories:
          type: array
          items:
            type: string
            format: iri-reference
        tags:
          type: array
          items:
            type: string
            format: iri-reference
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
        manualCreatedAt:
          writeOnly: true
          type: string
          format: date-time
          nullable: true
    AssetType.jsonld-multitable_search_read_user.collection.get_userProfile.read_offer.collection.get_asset-type.collection.get_asset.collection.get_attributes.all:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          type: string
        author:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/User.jsonld-multitable_search_read_user.collection.get_userProfile.read_offer.collection.get_asset-type.collection.get_asset.collection.get_attributes.all'
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
    AssetType.jsonld-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          type: string
        author:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/User.jsonld-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all'
        collections:
          type: array
          items:
            $ref: '#/components/schemas/Collection.jsonld-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category.jsonld-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag.jsonld-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all'
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
    AssetTypeRating:
      type: object
      description: ''
      properties:
        ratedAssetType:
          type: string
          format: iri-reference
          nullable: true
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
        rate:
          type: integer
        reviewer:
          type: string
          format: iri-reference
          nullable: true
        manualCreatedAt:
          writeOnly: true
          type: string
          format: date-time
          nullable: true
    AssetTypeRating.AssetTypeRatingInput:
      type: object
      description: ''
      required:
        - ratedAssetType
        - rate
      properties:
        ratedAssetType:
          type: string
          format: iri-reference
        rate:
          type: integer
    AssetTypeRating.AssetTypeRatingInput.jsonld:
      type: object
      description: ''
      required:
        - ratedAssetType
        - rate
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        ratedAssetType:
          type: string
          format: iri-reference
        rate:
          type: integer
    AssetTypeRating.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        ratedAssetType:
          type: string
          format: iri-reference
          nullable: true
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
        rate:
          type: integer
        reviewer:
          type: string
          format: iri-reference
          nullable: true
        manualCreatedAt:
          writeOnly: true
          type: string
          format: date-time
          nullable: true
    Balance:
      type: object
      description: ''
      properties:
        user:
          type: string
          format: iri-reference
          nullable: true
        amount:
          type: number
        currency:
          type: string
          enum:
            - ioi
            - eth
            - btc
            - matic
          example: ioi
        id:
          readOnly: true
          type: string
          format: uuid
    Balance.jsonld:
      type: object
      description: ''
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        user:
          type: string
          format: iri-reference
          nullable: true
        amount:
          type: number
        currency:
          type: string
          enum:
            - ioi
            - eth
            - btc
            - matic
          example: ioi
        id:
          readOnly: true
          type: string
          format: uuid
    BalanceResource:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          type: string
    BalanceResource.BalanceDepositInput:
      type: object
      description: ''
      properties:
        from_address:
          type: string
        contract_id:
          type: string
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - null
          example: 1
          nullable: true
    BalanceResource.BalanceDepositInput.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        from_address:
          type: string
        contract_id:
          type: string
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - null
          example: 1
          nullable: true
    BalanceResource.BalanceWithdrawInput:
      type: object
      description: ''
      properties:
        to_address:
          type: string
        contract_id:
          type: string
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - null
          example: 1
          nullable: true
        amount:
          type: number
    BalanceResource.BalanceWithdrawInput.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        to_address:
          type: string
        contract_id:
          type: string
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - null
          example: 1
          nullable: true
        amount:
          type: number
    BalanceResource.jsonld:
      type: object
      description: ''
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        id:
          readOnly: true
          type: string
    BalanceTransaction-attributes.identified_balance-transaction.read:
      type: object
      description: ''
      properties:
        type:
          type: string
          enum:
            - withdrawal
            - product_auction
            - deposit
            - product_sold
            - purchase
            - null
          example: withdrawal
          nullable: true
        currency:
          type: string
          enum:
            - ioi
            - eth
            - btc
            - matic
          example: ioi
        id:
          readOnly: true
          type: string
          format: uuid
    BalanceTransaction.jsonld-attributes.identified_balance-transaction.read:
      type: object
      description: ''
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        type:
          type: string
          enum:
            - withdrawal
            - product_auction
            - deposit
            - product_sold
            - purchase
            - null
          example: withdrawal
          nullable: true
        currency:
          type: string
          enum:
            - ioi
            - eth
            - btc
            - matic
          example: ioi
        id:
          readOnly: true
          type: string
          format: uuid
    Category:
      type: object
      description: ''
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
        parentCategory:
          type: string
          format: iri-reference
          nullable: true
        isVisible:
          default: true
          example: true
          type: boolean
        assetTypes:
          type: array
          items:
            type: string
            format: iri-reference
        id:
          readOnly: true
          type: string
          format: uuid
        visible:
          readOnly: true
          type: boolean
    Category-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all:
      type: object
      description: ''
      properties:
        name:
          type: string
        id:
          readOnly: true
          type: string
          format: uuid
    Category.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          type: string
        description:
          type: string
          nullable: true
        parentCategory:
          type: string
          format: iri-reference
          nullable: true
        isVisible:
          default: true
          example: true
          type: boolean
        assetTypes:
          type: array
          items:
            type: string
            format: iri-reference
        id:
          readOnly: true
          type: string
          format: uuid
        visible:
          readOnly: true
          type: boolean
    Category.jsonld-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          type: string
        id:
          readOnly: true
          type: string
          format: uuid
    Charity-attributes.identified_charity.read:
      type: object
      description: 'Class Charity'
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        amount:
          description: 'Percentage amount'
          type: string
          nullable: true
        wallets:
          type: array
          items:
            $ref: '#/components/schemas/CharityWallet-attributes.identified_charity.read'
        id:
          readOnly: true
          type: string
          format: uuid
    Charity-attributes.identified_charityWallet.read:
      type: object
      description: 'Class Charity'
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
    Charity-multitable_search_read_user.collection.get_userProfile.read_offer.collection.get_asset-type.collection.get_asset.collection.get_attributes.all:
      type: object
      description: 'Class Charity'
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
    Charity-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all:
      type: object
      description: 'Class Charity'
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
    Charity.CharityInput:
      type: object
      description: 'Class Charity'
      required:
        - name
        - amount
      properties:
        name:
          minLength: 3
          maxLength: 255
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        amount:
          type: number
          nullable: true
    Charity.CharityInput.jsonld:
      type: object
      description: 'Class Charity'
      required:
        - name
        - amount
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          minLength: 3
          maxLength: 255
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        amount:
          type: number
          nullable: true
    Charity.jsonld-attributes.identified_charity.read:
      type: object
      description: 'Class Charity'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        amount:
          description: 'Percentage amount'
          type: string
          nullable: true
        wallets:
          type: array
          items:
            $ref: '#/components/schemas/CharityWallet.jsonld-attributes.identified_charity.read'
        id:
          readOnly: true
          type: string
          format: uuid
    Charity.jsonld-attributes.identified_charityWallet.read:
      type: object
      description: 'Class Charity'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
          format: uuid
    Charity.jsonld-multitable_search_read_user.collection.get_userProfile.read_offer.collection.get_asset-type.collection.get_asset.collection.get_attributes.all:
      type: object
      description: 'Class Charity'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
    Charity.jsonld-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all:
      type: object
      description: 'Class Charity'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
    CharityWallet-attributes.identified_charity.read:
      type: object
      description: 'Class CharityWallet'
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
    CharityWallet-attributes.identified_charityWallet.read:
      type: object
      description: 'Class CharityWallet'
      properties:
        address:
          type: string
        currency:
          type: string
          enum:
            - ioi
            - eth
            - btc
            - matic
          example: ioi
        amount:
          type: string
        locked:
          type: string
        paid:
          type: string
        version:
          type: integer
        chainId:
          type: integer
        charity:
          $ref: '#/components/schemas/Charity-attributes.identified_charityWallet.read'
        id:
          readOnly: true
          type: string
          format: uuid
    CharityWallet.CharityWalletInput:
      type: object
      description: 'Class CharityWallet'
      required:
        - charity
        - address
        - currency
        - version
        - chain_id
      properties:
        charity:
          type: string
          format: iri-reference
          nullable: true
        address:
          minLength: 3
          maxLength: 255
          type: string
          nullable: true
        currency:
          type: string
          nullable: true
        version:
          type: integer
          nullable: true
        chain_id:
          type: integer
          nullable: true
    CharityWallet.CharityWalletInput.jsonld:
      type: object
      description: 'Class CharityWallet'
      required:
        - charity
        - address
        - currency
        - version
        - chain_id
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        charity:
          type: string
          format: iri-reference
          nullable: true
        address:
          minLength: 3
          maxLength: 255
          type: string
          nullable: true
        currency:
          type: string
          nullable: true
        version:
          type: integer
          nullable: true
        chain_id:
          type: integer
          nullable: true
    CharityWallet.PayoutInput:
      type: object
      description: 'Class CharityWallet'
      required:
        - amount
      properties:
        amount:
          type: number
    CharityWallet.PayoutInput.jsonld:
      type: object
      description: 'Class CharityWallet'
      required:
        - amount
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        amount:
          type: number
    CharityWallet.jsonld-attributes.identified_charity.read:
      type: object
      description: 'Class CharityWallet'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
          format: uuid
    CharityWallet.jsonld-attributes.identified_charityWallet.read:
      type: object
      description: 'Class CharityWallet'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        address:
          type: string
        currency:
          type: string
          enum:
            - ioi
            - eth
            - btc
            - matic
          example: ioi
        amount:
          type: string
        locked:
          type: string
        paid:
          type: string
        version:
          type: integer
        chainId:
          type: integer
        charity:
          $ref: '#/components/schemas/Charity.jsonld-attributes.identified_charityWallet.read'
        id:
          readOnly: true
          type: string
          format: uuid
    CharityWalletTransaction:
      type: object
      description: 'Class CharityWalletTransaction'
      properties:
        amount:
          type: string
        type:
          type: string
          enum:
            - debit
            - credit
          example: debit
        wallet:
          type: string
          format: iri-reference
        user:
          description: 'Transaction Creator'
          type: string
          format: iri-reference
          nullable: true
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
        manualCreatedAt:
          writeOnly: true
          type: string
          format: date-time
          nullable: true
    CharityWalletTransaction.jsonld:
      type: object
      description: 'Class CharityWalletTransaction'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        amount:
          type: string
        type:
          type: string
          enum:
            - debit
            - credit
          example: debit
        wallet:
          type: string
          format: iri-reference
        user:
          description: 'Transaction Creator'
          type: string
          format: iri-reference
          nullable: true
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
        manualCreatedAt:
          writeOnly: true
          type: string
          format: date-time
          nullable: true
    Collection:
      type: object
      description: ''
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        owner:
          type: string
          format: iri-reference
          nullable: true
        assetTypes:
          type: array
          items:
            type: string
            format: iri-reference
        id:
          readOnly: true
          type: string
          format: uuid
    Collection-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all:
      type: object
      description: ''
      properties:
        name:
          type: string
          nullable: true
        id:
          readOnly: true
          type: string
          format: uuid
    Collection.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        owner:
          type: string
          format: iri-reference
          nullable: true
        assetTypes:
          type: array
          items:
            type: string
            format: iri-reference
        id:
          readOnly: true
          type: string
          format: uuid
    Collection.jsonld-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          type: string
          nullable: true
        id:
          readOnly: true
          type: string
          format: uuid
    DatabaseNotification-attributes.identified_databaseNotification.read:
      type: object
      description: 'Class DatabaseNotification'
      properties:
        id:
          readOnly: true
          type: string
        title:
          type: string
        body:
          type: string
        createdAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
        readAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
    DatabaseNotification.jsonld-attributes.identified_databaseNotification.read:
      type: object
      description: 'Class DatabaseNotification'
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        id:
          readOnly: true
          type: string
        title:
          type: string
        body:
          type: string
        createdAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
        readAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
    Device:
      type: object
      description: 'Class Device'
      properties:
        user:
          type: string
          format: iri-reference
        deviceToken:
          type: string
        userAgent:
          type: string
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
        manualCreatedAt:
          writeOnly: true
          type: string
          format: date-time
          nullable: true
    Device.DeviceInput:
      type: object
      description: 'Class Device'
      required:
        - deviceToken
      properties:
        deviceToken:
          type: string
    Device.DeviceInput.jsonld:
      type: object
      description: 'Class Device'
      required:
        - deviceToken
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        deviceToken:
          type: string
    Device.jsonld:
      type: object
      description: 'Class Device'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        user:
          type: string
          format: iri-reference
        deviceToken:
          type: string
        userAgent:
          type: string
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
        manualCreatedAt:
          writeOnly: true
          type: string
          format: date-time
          nullable: true
    Message:
      type: object
      description: 'Class Message'
      properties:
        content:
          type: string
        senderId:
          type: string
          nullable: true
        senderNick:
          type: string
          nullable: true
        senderImg:
          type: string
          nullable: true
        recipientId:
          type: string
        recipientNick:
          type: string
          nullable: true
        recipientImg:
          type: string
          nullable: true
        type:
          type: string
        assetId:
          type: string
          nullable: true
        assetName:
          type: string
          nullable: true
        readAt:
          type: string
          format: date-time
          nullable: true
        id:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        sender:
          writeOnly: true
          type: string
          format: iri-reference
        recipient:
          writeOnly: true
          type: string
          format: iri-reference
        asset:
          writeOnly: true
          type: string
          format: iri-reference
        collectionName:
          readOnly: true
          type: string
    Message.ChatMessageInput:
      type: object
      description: 'Class Message'
      required:
        - content
        - recipient
      properties:
        content:
          minLength: 1
          type: string
          nullable: true
        recipient:
          type: string
          format: iri-reference
          nullable: true
        asset:
          type: string
          format: iri-reference
          nullable: true
    Message.ChatMessageInput.jsonld:
      type: object
      description: 'Class Message'
      required:
        - content
        - recipient
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        content:
          minLength: 1
          type: string
          nullable: true
        recipient:
          type: string
          format: iri-reference
          nullable: true
        asset:
          type: string
          format: iri-reference
          nullable: true
    Message.jsonld:
      type: object
      description: 'Class Message'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        content:
          type: string
        senderId:
          type: string
          nullable: true
        senderNick:
          type: string
          nullable: true
        senderImg:
          type: string
          nullable: true
        recipientId:
          type: string
        recipientNick:
          type: string
          nullable: true
        recipientImg:
          type: string
          nullable: true
        type:
          type: string
        assetId:
          type: string
          nullable: true
        assetName:
          type: string
          nullable: true
        readAt:
          type: string
          format: date-time
          nullable: true
        id:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        sender:
          writeOnly: true
          type: string
          format: iri-reference
        recipient:
          writeOnly: true
          type: string
          format: iri-reference
        asset:
          writeOnly: true
          type: string
          format: iri-reference
        collectionName:
          readOnly: true
          type: string
    MultitableSearch-multitable_search_read_user.collection.get_userProfile.read_offer.collection.get_asset-type.collection.get_asset.collection.get_attributes.all:
      type: object
      description: ''
      properties:
        owners:
          type: array
          items:
            $ref: '#/components/schemas/User-multitable_search_read_user.collection.get_userProfile.read_offer.collection.get_asset-type.collection.get_asset.collection.get_attributes.all'
        offers:
          type: array
          items:
            $ref: '#/components/schemas/Offer-multitable_search_read_user.collection.get_userProfile.read_offer.collection.get_asset-type.collection.get_asset.collection.get_attributes.all'
    MultitableSearch.jsonld-multitable_search_read_user.collection.get_userProfile.read_offer.collection.get_asset-type.collection.get_asset.collection.get_attributes.all:
      type: object
      description: ''
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        owners:
          type: array
          items:
            $ref: '#/components/schemas/User.jsonld-multitable_search_read_user.collection.get_userProfile.read_offer.collection.get_asset-type.collection.get_asset.collection.get_attributes.all'
        offers:
          type: array
          items:
            $ref: '#/components/schemas/Offer.jsonld-multitable_search_read_user.collection.get_userProfile.read_offer.collection.get_asset-type.collection.get_asset.collection.get_attributes.all'
    NotifiableDevice:
      type: object
      properties:
        token:
          type: string
        type:
          type: string
        userAgent:
          type: string
    NotifiableDevice.jsonld:
      type: object
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        token:
          type: string
        type:
          type: string
        userAgent:
          type: string
    Offer-multitable_search_read_user.collection.get_userProfile.read_offer.collection.get_asset-type.collection.get_asset.collection.get_attributes.all:
      type: object
      description: ''
      properties:
        asset:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Asset-multitable_search_read_user.collection.get_userProfile.read_offer.collection.get_asset-type.collection.get_asset.collection.get_attributes.all'
        charity:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Charity-multitable_search_read_user.collection.get_userProfile.read_offer.collection.get_asset-type.collection.get_asset.collection.get_attributes.all'
        price:
          type: number
        count:
          type: integer
        remaining:
          type: integer
        expiredAt:
          type: string
          format: date-time
          nullable: true
        extras:
          type: string
          nullable: true
        offerType:
          type: string
          enum:
            - sale
            - auction
          example: sale
        isTop:
          type: boolean
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
        owner:
          readOnly: true
          $ref: '#/components/schemas/User-multitable_search_read_user.collection.get_userProfile.read_offer.collection.get_asset-type.collection.get_asset.collection.get_attributes.all'
    Offer-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all:
      type: object
      description: ''
      properties:
        asset:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Asset-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all'
        charity:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Charity-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all'
        price:
          type: number
        count:
          type: integer
        remaining:
          type: integer
        expiredAt:
          type: string
          format: date-time
          nullable: true
        extras:
          type: string
          nullable: true
        offerType:
          type: string
          enum:
            - sale
            - auction
          example: sale
        isTop:
          type: boolean
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
        owner:
          readOnly: true
          $ref: '#/components/schemas/User-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all'
    Offer.BuyAssetInput:
      type: object
      description: ''
      properties:
        quantityToBuy:
          type: integer
        optionalCharityDonation:
          type: number
    Offer.BuyAssetInput.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        quantityToBuy:
          type: integer
        optionalCharityDonation:
          type: number
    Offer.OfferInput:
      type: object
      description: ''
      required:
        - asset
      properties:
        asset:
          type: string
          format: iri-reference
        charity:
          type: string
          format: iri-reference
          nullable: true
        price:
          type: number
        count:
          type: integer
        remaining:
          type: integer
        expiredAt:
          type: string
          format: date-time
          nullable: true
        offerType:
          type: string
          enum:
            - sale
            - auction
          example: sale
        isTop:
          type: boolean
    Offer.OfferInput.jsonld:
      type: object
      description: ''
      required:
        - asset
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        asset:
          type: string
          format: iri-reference
        charity:
          type: string
          format: iri-reference
          nullable: true
        price:
          type: number
        count:
          type: integer
        remaining:
          type: integer
        expiredAt:
          type: string
          format: date-time
          nullable: true
        offerType:
          type: string
          enum:
            - sale
            - auction
          example: sale
        isTop:
          type: boolean
    Offer.jsonld-multitable_search_read_user.collection.get_userProfile.read_offer.collection.get_asset-type.collection.get_asset.collection.get_attributes.all:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        asset:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Asset.jsonld-multitable_search_read_user.collection.get_userProfile.read_offer.collection.get_asset-type.collection.get_asset.collection.get_attributes.all'
        charity:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Charity.jsonld-multitable_search_read_user.collection.get_userProfile.read_offer.collection.get_asset-type.collection.get_asset.collection.get_attributes.all'
        price:
          type: number
        count:
          type: integer
        remaining:
          type: integer
        expiredAt:
          type: string
          format: date-time
          nullable: true
        extras:
          type: string
          nullable: true
        offerType:
          type: string
          enum:
            - sale
            - auction
          example: sale
        isTop:
          type: boolean
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
        owner:
          readOnly: true
          $ref: '#/components/schemas/User.jsonld-multitable_search_read_user.collection.get_userProfile.read_offer.collection.get_asset-type.collection.get_asset.collection.get_attributes.all'
    Offer.jsonld-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        asset:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Asset.jsonld-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all'
        charity:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Charity.jsonld-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all'
        price:
          type: number
        count:
          type: integer
        remaining:
          type: integer
        expiredAt:
          type: string
          format: date-time
          nullable: true
        extras:
          type: string
          nullable: true
        offerType:
          type: string
          enum:
            - sale
            - auction
          example: sale
        isTop:
          type: boolean
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
        owner:
          readOnly: true
          $ref: '#/components/schemas/User.jsonld-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all'
    SocialAccount:
      type: object
      properties:
        user:
          type: string
          format: iri-reference
        provider:
          type: string
        providerId:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        nickname:
          type: string
          nullable: true
        avatar:
          type: string
          nullable: true
        token:
          type: string
          nullable: true
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
        manualCreatedAt:
          writeOnly: true
          type: string
          format: date-time
          nullable: true
    SocialAccount.jsonld:
      type: object
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        user:
          type: string
          format: iri-reference
        provider:
          type: string
        providerId:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        nickname:
          type: string
          nullable: true
        avatar:
          type: string
          nullable: true
        token:
          type: string
          nullable: true
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
        manualCreatedAt:
          writeOnly: true
          type: string
          format: date-time
          nullable: true
    Tag:
      type: object
      description: ''
      properties:
        name:
          type: string
        assetTypes:
          type: array
          items:
            type: string
            format: iri-reference
        id:
          readOnly: true
          type: string
          format: uuid
    Tag-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all:
      type: object
      description: ''
      properties:
        name:
          type: string
        id:
          readOnly: true
          type: string
          format: uuid
    Tag.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          type: string
        assetTypes:
          type: array
          items:
            type: string
            format: iri-reference
        id:
          readOnly: true
          type: string
          format: uuid
    Tag.jsonld-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          type: string
        id:
          readOnly: true
          type: string
          format: uuid
    Transaction-attributes.identified_transaction.read:
      type: object
      description: 'Class Transaction'
      properties:
        type:
          type: string
          enum:
            - withdrawal
            - product_auction
            - deposit
            - product_sold
            - purchase
            - null
          example: withdrawal
          nullable: true
        description:
          type: string
          nullable: true
        price:
          type: string
        currency:
          type: string
          enum:
            - ioi
            - eth
            - btc
            - matic
          example: ioi
        id:
          readOnly: true
          type: string
          format: uuid
        detail:
          readOnly: true
          type: string
          nullable: true
    Transaction.jsonld-attributes.identified_transaction.read:
      type: object
      description: 'Class Transaction'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        type:
          type: string
          enum:
            - withdrawal
            - product_auction
            - deposit
            - product_sold
            - purchase
            - null
          example: withdrawal
          nullable: true
        description:
          type: string
          nullable: true
        price:
          type: string
        currency:
          type: string
          enum:
            - ioi
            - eth
            - btc
            - matic
          example: ioi
        id:
          readOnly: true
          type: string
          format: uuid
        detail:
          readOnly: true
          type: string
          nullable: true
    User:
      type: object
      description: ''
      properties:
        email:
          type: string
        nick:
          type: string
        cognitoSub:
          type: string
          nullable: true
        verifiedAt:
          type: string
          format: date-time
          nullable: true
        lastLoginAt:
          type: string
          format: date-time
          nullable: true
        userProfile:
          type: string
          format: iri-reference
          nullable: true
        invitedBy:
          type: string
          nullable: true
        collections:
          type: array
          items:
            type: string
            format: iri-reference
        owningAssets:
          type: array
          items:
            type: string
            format: iri-reference
        balance:
          type: string
          format: iri-reference
          nullable: true
        roles:
          type: array
          items:
            type: string
        googleAuthenticatorSecret:
          type: string
          nullable: true
        socialAccounts:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SocialAccount'
        assetTypes:
          type: array
          items:
            type: string
            format: iri-reference
        transactions:
          writeOnly: true
          type: array
          items:
            type: string
            format: iri-reference
        followers:
          readOnly: true
          type: array
          items:
            type: string
            format: iri-reference
        following:
          type: array
          items:
            type: string
            format: iri-reference
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
        password:
          readOnly: true
        salt:
          readOnly: true
        username:
          readOnly: true
          type: string
          nullable: true
        userIdentifier:
          readOnly: true
          type: string
          nullable: true
        googleAuthenticatorEnabled:
          readOnly: true
          type: boolean
        googleAuthenticatorUsername:
          readOnly: true
          type: string
        notifierDisplayName:
          readOnly: true
          type: string
          nullable: true
        preferredChannels:
          readOnly: true
          type: array
          items:
            type: string
        notifiableDevices:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/NotifiableDevice'
        phone:
          readOnly: true
          type: string
        manualCreatedAt:
          writeOnly: true
          type: string
          format: date-time
          nullable: true
    User-multitable_search_read_user.collection.get_userProfile.read_offer.collection.get_asset-type.collection.get_asset.collection.get_attributes.all:
      type: object
      description: ''
      properties:
        email:
          type: string
        nick:
          type: string
        userProfile:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/UserProfile-multitable_search_read_user.collection.get_userProfile.read_offer.collection.get_asset-type.collection.get_asset.collection.get_attributes.all'
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
    User-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all:
      type: object
      description: ''
      properties:
        email:
          type: string
        nick:
          type: string
        userProfile:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/UserProfile-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all'
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
    User.DepositResponse:
      type: object
      description: ''
      properties:
        user_id:
          type: string
          format: uuid
        currency:
          type: string
        contract_id:
          type: string
        token_id:
          type: string
        amount:
          type: number
        location:
          type: string
        extras:
          type: string
    User.DepositResponse.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        user_id:
          type: string
          format: uuid
        currency:
          type: string
        contract_id:
          type: string
        token_id:
          type: string
        amount:
          type: number
        location:
          type: string
        extras:
          type: string
    User.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        email:
          type: string
        nick:
          type: string
        cognitoSub:
          type: string
          nullable: true
        verifiedAt:
          type: string
          format: date-time
          nullable: true
        lastLoginAt:
          type: string
          format: date-time
          nullable: true
        userProfile:
          type: string
          format: iri-reference
          nullable: true
        invitedBy:
          type: string
          nullable: true
        collections:
          type: array
          items:
            type: string
            format: iri-reference
        owningAssets:
          type: array
          items:
            type: string
            format: iri-reference
        balance:
          type: string
          format: iri-reference
          nullable: true
        roles:
          type: array
          items:
            type: string
        googleAuthenticatorSecret:
          type: string
          nullable: true
        socialAccounts:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SocialAccount.jsonld'
        assetTypes:
          type: array
          items:
            type: string
            format: iri-reference
        transactions:
          writeOnly: true
          type: array
          items:
            type: string
            format: iri-reference
        followers:
          readOnly: true
          type: array
          items:
            type: string
            format: iri-reference
        following:
          type: array
          items:
            type: string
            format: iri-reference
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
        password:
          readOnly: true
        salt:
          readOnly: true
        username:
          readOnly: true
          type: string
          nullable: true
        userIdentifier:
          readOnly: true
          type: string
          nullable: true
        googleAuthenticatorEnabled:
          readOnly: true
          type: boolean
        googleAuthenticatorUsername:
          readOnly: true
          type: string
        notifierDisplayName:
          readOnly: true
          type: string
          nullable: true
        preferredChannels:
          readOnly: true
          type: array
          items:
            type: string
        notifiableDevices:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/NotifiableDevice.jsonld'
        phone:
          readOnly: true
          type: string
        manualCreatedAt:
          writeOnly: true
          type: string
          format: date-time
          nullable: true
    User.jsonld-multitable_search_read_user.collection.get_userProfile.read_offer.collection.get_asset-type.collection.get_asset.collection.get_attributes.all:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        email:
          type: string
        nick:
          type: string
        userProfile:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/UserProfile.jsonld-multitable_search_read_user.collection.get_userProfile.read_offer.collection.get_asset-type.collection.get_asset.collection.get_attributes.all'
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
    User.jsonld-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        email:
          type: string
        nick:
          type: string
        userProfile:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/UserProfile.jsonld-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all'
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
    UserFeedLog-attributes.identified_UserFeedLog.read:
      type: object
      description: 'Class UserFeedLog'
      properties:
        userId:
          readOnly: true
          type: string
        userNick:
          readOnly: true
          type: string
        messageType:
          type: string
    UserFeedLog.jsonld-attributes.identified_UserFeedLog.read:
      type: object
      description: 'Class UserFeedLog'
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        userId:
          readOnly: true
          type: string
        userNick:
          readOnly: true
          type: string
        messageType:
          type: string
    UserProfile-attributes.identified_userProfile.read:
      type: object
      description: 'Class UserProfile'
      properties:
        email:
          type: string
          nullable: true
        nick:
          type: string
          nullable: true
        country:
          maxLength: 3
          type: string
          nullable: true
        referralCode:
          type: string
          nullable: true
        bio:
          type: string
          nullable: true
        isVerifiedSeller:
          type: boolean
        imageUrl:
          type: string
          nullable: true
        thumbImageUrl:
          type: string
          nullable: true
        titleImageUrl:
          type: string
          nullable: true
        id:
          readOnly: true
          type: string
          format: uuid
        followersCount:
          readOnly: true
          type: integer
        followingCount:
          readOnly: true
          type: integer
        assetsCount:
          readOnly: true
          type: integer
    UserProfile-multitable_search_read_user.collection.get_userProfile.read_offer.collection.get_asset-type.collection.get_asset.collection.get_attributes.all:
      type: object
      description: 'Class UserProfile'
      properties:
        email:
          type: string
          nullable: true
        nick:
          type: string
          nullable: true
        country:
          maxLength: 3
          type: string
          nullable: true
        referralCode:
          type: string
          nullable: true
        bio:
          type: string
          nullable: true
        isVerifiedSeller:
          type: boolean
        imageUrl:
          type: string
          nullable: true
        thumbImageUrl:
          type: string
          nullable: true
        titleImageUrl:
          type: string
          nullable: true
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
        followersCount:
          readOnly: true
          type: integer
        followingCount:
          readOnly: true
          type: integer
        assetsCount:
          readOnly: true
          type: integer
    UserProfile-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all:
      type: object
      description: 'Class UserProfile'
      properties:
        email:
          type: string
          nullable: true
        nick:
          type: string
          nullable: true
        country:
          maxLength: 3
          type: string
          nullable: true
        referralCode:
          type: string
          nullable: true
        bio:
          type: string
          nullable: true
        isVerifiedSeller:
          type: boolean
        imageUrl:
          type: string
          nullable: true
        thumbImageUrl:
          type: string
          nullable: true
        titleImageUrl:
          type: string
          nullable: true
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
        followersCount:
          readOnly: true
          type: integer
        followingCount:
          readOnly: true
          type: integer
        assetsCount:
          readOnly: true
          type: integer
    UserProfile-userProfile.write:
      type: object
      description: 'Class UserProfile'
      properties:
        email:
          type: string
          nullable: true
        nick:
          type: string
          nullable: true
        country:
          maxLength: 3
          type: string
          nullable: true
        bio:
          type: string
          nullable: true
        isVerifiedSeller:
          type: boolean
    UserProfile.jsonld-attributes.identified_userProfile.read:
      type: object
      description: 'Class UserProfile'
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        email:
          type: string
          nullable: true
        nick:
          type: string
          nullable: true
        country:
          maxLength: 3
          type: string
          nullable: true
        referralCode:
          type: string
          nullable: true
        bio:
          type: string
          nullable: true
        isVerifiedSeller:
          type: boolean
        imageUrl:
          type: string
          nullable: true
        thumbImageUrl:
          type: string
          nullable: true
        titleImageUrl:
          type: string
          nullable: true
        id:
          readOnly: true
          type: string
          format: uuid
        followersCount:
          readOnly: true
          type: integer
        followingCount:
          readOnly: true
          type: integer
        assetsCount:
          readOnly: true
          type: integer
    UserProfile.jsonld-multitable_search_read_user.collection.get_userProfile.read_offer.collection.get_asset-type.collection.get_asset.collection.get_attributes.all:
      type: object
      description: 'Class UserProfile'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        email:
          type: string
          nullable: true
        nick:
          type: string
          nullable: true
        country:
          maxLength: 3
          type: string
          nullable: true
        referralCode:
          type: string
          nullable: true
        bio:
          type: string
          nullable: true
        isVerifiedSeller:
          type: boolean
        imageUrl:
          type: string
          nullable: true
        thumbImageUrl:
          type: string
          nullable: true
        titleImageUrl:
          type: string
          nullable: true
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
        followersCount:
          readOnly: true
          type: integer
        followingCount:
          readOnly: true
          type: integer
        assetsCount:
          readOnly: true
          type: integer
    UserProfile.jsonld-offer.collection.get_asset-type.collection.get_user.collection.get_user.item.get_userProfile.read_asset.collection.get_asset-type.item.get_tag.item.get_category.item.get_collection.item.get_attributes.all:
      type: object
      description: 'Class UserProfile'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        email:
          type: string
          nullable: true
        nick:
          type: string
          nullable: true
        country:
          maxLength: 3
          type: string
          nullable: true
        referralCode:
          type: string
          nullable: true
        bio:
          type: string
          nullable: true
        isVerifiedSeller:
          type: boolean
        imageUrl:
          type: string
          nullable: true
        thumbImageUrl:
          type: string
          nullable: true
        titleImageUrl:
          type: string
          nullable: true
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
        followersCount:
          readOnly: true
          type: integer
        followingCount:
          readOnly: true
          type: integer
        assetsCount:
          readOnly: true
          type: integer
    UserProfile.jsonld-userProfile.write:
      type: object
      description: 'Class UserProfile'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        email:
          type: string
          nullable: true
        nick:
          type: string
          nullable: true
        country:
          maxLength: 3
          type: string
          nullable: true
        bio:
          type: string
          nullable: true
        isVerifiedSeller:
          type: boolean
    UserRating:
      type: object
      description: ''
      properties:
        ratedUser:
          type: string
          format: iri-reference
          nullable: true
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
        rate:
          type: integer
        reviewer:
          type: string
          format: iri-reference
          nullable: true
        manualCreatedAt:
          writeOnly: true
          type: string
          format: date-time
          nullable: true
    UserRating.UserRatingInput:
      type: object
      description: ''
      required:
        - ratedUser
        - rate
      properties:
        ratedUser:
          type: string
          format: iri-reference
        rate:
          type: integer
    UserRating.UserRatingInput.jsonld:
      type: object
      description: ''
      required:
        - ratedUser
        - rate
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        ratedUser:
          type: string
          format: iri-reference
        rate:
          type: integer
    UserRating.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        ratedUser:
          type: string
          format: iri-reference
          nullable: true
        id:
          readOnly: true
          type: string
          format: uuid
        createdAt:
          readOnly: true
          type: string
          format: date-time
        rate:
          type: integer
        reviewer:
          type: string
          format: iri-reference
          nullable: true
        manualCreatedAt:
          writeOnly: true
          type: string
          format: date-time
          nullable: true
  securitySchemes:
    api_key:
      type: apiKey
      in: header
      description: 'Value for the Authorization header'
      name: Authorization
